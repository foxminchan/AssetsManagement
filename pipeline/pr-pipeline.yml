trigger:
  - none

pool:
  vmImage: "ubuntu-latest"

variables:
  solution: "./AssetManagement.sln"
  reactAppPath: "./src/ASM.Web"
  buildPlatform: "Any CPU"
  buildConfiguration: "Release"
  vmImageName: "ubuntu-latest"

stages:
  - stage: CI
    displayName: CI stage

    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
          - task: NodeTool@0
            displayName: "Install Node.js"
            inputs:
              versionSpec: "22.0.0"

          - task: UseDotNet@2
            displayName: "Install .NET Core SDK"
            inputs:
              version: "8.0.204"

          - task: DotNetCoreCLI@2
            displayName: Restore
            inputs:
              command: "restore"
              publishWebProjects: true
              projects: $(solution)

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: "build"
              projects: $(solution)
              arguments: --configuration $(buildConfiguration)

          - script: dotnet test $(solution) --logger "junit;LogFilePath=./TestResults/results.xml" --collect:"XPlat Code Coverage" /p:CollectCoverage=true /p:CoverletOutput=./TestResults /p:CoverletOutputFormat=cobertura
            displayName: "Run Tests"
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: "JUnit"
              testResultsFiles: "$(Build.SourcesDirectory)/tests/**/TestResults/**/results.xml"
              testRunTitle: "Test Results"
              displayName: "Publish Test Result"

          - task: reportgenerator@5
            displayName: Generate Test Report
            inputs:
              reports: "$(Build.SourcesDirectory)/tests/**/TestResults/**/coverage.cobertura.xml"
              targetdir: "$(Build.SourcesDirectory)/TestResults"
              reporttypes: "HtmlInline_AzurePipelines;Cobertura;Badges"

          - task: PublishCodeCoverageResults@2
            displayName: "Publish Code Coverage"
            inputs:
              codeCoverageTool: "Cobertura"
              summaryFileLocation: "$(Build.SourcesDirectory)/TestResults/Cobertura.xml"
              reportDirectory: "$(Build.SourcesDirectory)/coverage"
              additionalCodeCoverageFiles: "$(Build.SourcesDirectory)/coveragereport*.html"

          - task: DotNetCoreCLI@2
            displayName: Publish
            inputs:
              command: "publish"
              publishWebProjects: true
              arguments: "--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)"
              zipAfterPublish: false

          - script: |
              cd $(reactAppPath)
              npm install
            displayName: "Install npm dependencies"

          - script: |
              cd $(reactAppPath)
              npm run build
            displayName: "Build React App"
