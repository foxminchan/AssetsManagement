/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router"

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as AuthenticatedImport } from "./routes/_authenticated"
import { Route as AuthenticatedUserIdImport } from "./routes/_authenticated/user/$id"
import { Route as AuthenticatedUserNewImport } from "./routes/_authenticated/user/new"
import { Route as IndexImport } from "./routes/index"

// Create Virtual Routes

const AuthenticatedUserIndexLazyImport = createFileRoute(
  "/_authenticated/user/"
)()
const AuthenticatedHomeIndexLazyImport = createFileRoute(
  "/_authenticated/home/"
)()
const AuthenticatedUserNewIndexLazyImport = createFileRoute(
  "/_authenticated/user/new/"
)()

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: "/_authenticated",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUserIndexLazyRoute = AuthenticatedUserIndexLazyImport.update(
  {
    path: "/user/",
    getParentRoute: () => AuthenticatedRoute,
  } as any
).lazy(() =>
  import("./routes/_authenticated/user/index.lazy").then((d) => d.Route)
)

const AuthenticatedHomeIndexLazyRoute = AuthenticatedHomeIndexLazyImport.update(
  {
    path: "/home/",
    getParentRoute: () => AuthenticatedRoute,
  } as any
).lazy(() =>
  import("./routes/_authenticated/home/index.lazy").then((d) => d.Route)
)

const AuthenticatedUserNewRoute = AuthenticatedUserNewImport.update({
  path: "/user/new",
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedUserIdRoute = AuthenticatedUserIdImport.update({
  path: "/user/$id",
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedUserNewIndexLazyRoute =
  AuthenticatedUserNewIndexLazyImport.update({
    path: "/user/new/",
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import("./routes/_authenticated/user/new/index.lazy").then((d) => d.Route)
  )

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/_authenticated": {
      id: "/_authenticated"
      path: ""
      fullPath: ""
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    "/_authenticated/user/$id": {
      id: "/_authenticated/user/$id"
      path: "/user/$id"
      fullPath: "/user/$id"
      preLoaderRoute: typeof AuthenticatedUserIdImport
      parentRoute: typeof AuthenticatedImport
    }
    "/_authenticated/user/new": {
      id: "/_authenticated/user/new"
      path: "/user/new"
      fullPath: "/user/new"
      preLoaderRoute: typeof AuthenticatedUserNewImport
      parentRoute: typeof AuthenticatedImport
    }
    "/_authenticated/home/": {
      id: "/_authenticated/home/"
      path: "/home"
      fullPath: "/home"
      preLoaderRoute: typeof AuthenticatedHomeIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    "/_authenticated/user/": {
      id: "/_authenticated/user/"
      path: "/user"
      fullPath: "/user"
      preLoaderRoute: typeof AuthenticatedUserIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    "/_authenticated/user/new/": {
      id: "/_authenticated/user/new/"
      path: "/user/new"
      fullPath: "/user/new"
      preLoaderRoute: typeof AuthenticatedUserNewIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedUserIdRoute,
    AuthenticatedUserNewRoute,
    AuthenticatedHomeIndexLazyRoute,
    AuthenticatedUserIndexLazyRoute,
    AuthenticatedUserNewIndexLazyRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/user/$id",
        "/_authenticated/user/new",
        "/_authenticated/home/",
        "/_authenticated/user/",
        "/_authenticated/user/new/"
      ]
    },
    "/_authenticated/user/$id": {
      "filePath": "_authenticated/user/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/user/new": {
      "filePath": "_authenticated/user/new.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/home/": {
      "filePath": "_authenticated/home/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/user/": {
      "filePath": "_authenticated/user/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/user/new/": {
      "filePath": "_authenticated/user/new/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
